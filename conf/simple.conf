# This are simple rule files that allow you to add flags to processes
# Each rule is a line
#
# [match]        [flagename]   [[attribute]=[value]|...]
#
# match:
# if not regular expressions is specified, a glob style pattern is used.
# The g_pattern_match* functions match a string against a pattern containing 
# '*' and '?' wildcards with similar semantics as the standard glob() function: 
#   '*' matches an arbitrary, possibly empty, string, 
#   '?' matches an arbitrary character.
#
# Note that in contrast to glob(), the '/' character can be matched by the 
# wildcards, there are no '[...]' character ranges and '*' and '?'
# can not be escaped to include them literally in a pattern. 
#
# see:
# http://library.gnome.org/devel/glib/2.26/glib-Glob-style-pattern-matching.html
#
# /full/path        path starting with / are absolute exe paths
# basename          matches the last part of the command
# cmd:[globmatch]   matches the cmdline with glob pattern
# re_exe:[regexp]   regular expression used on the path of the executable
# re_cmd:[regexp]   regular expression on full command line
# re_base:[regexp]  regular expression on basename
#
# Example:
# /path/to/my/exe     user.media
# python              test.useless    value=1   threshold=10212
#
# there is one speciality: the timeout value is an offset to the current
# time. So, writing timeout=20 means that the flag will disappear 20 seconds
# after the flag gets added
#
# See https://github.com/poelzi/ulatencyd/wiki/flags.md for the convention
# on the flag names
#
# It is highly recomanded to add your personal rules to a file in simple.d
# so it does not get overwritten by an update
